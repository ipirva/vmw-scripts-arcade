# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.management_plane_api_networking_services_policy_based_routing_api import ManagementPlaneAPINetworkingServicesPolicyBasedRoutingApi  # noqa: E501
from swagger_client.rest import ApiException


class TestManagementPlaneAPINetworkingServicesPolicyBasedRoutingApi(unittest.TestCase):
    """ManagementPlaneAPINetworkingServicesPolicyBasedRoutingApi unit test stubs"""

    def setUp(self):
        self.api = ManagementPlaneAPINetworkingServicesPolicyBasedRoutingApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_pbr_rule_in_section(self):
        """Test case for add_pbr_rule_in_section

        Add a Single Rule in a Section  # noqa: E501
        """
        pass

    def test_add_pbr_rules_in_section_create_multiple(self):
        """Test case for add_pbr_rules_in_section_create_multiple

        Add Multiple Rules in a Section  # noqa: E501
        """
        pass

    def test_add_pbr_section(self):
        """Test case for add_pbr_section

        Create a New Empty Section  # noqa: E501
        """
        pass

    def test_add_pbr_section_with_rules_create_with_rules(self):
        """Test case for add_pbr_section_with_rules_create_with_rules

        Create a Section with Rules  # noqa: E501
        """
        pass

    def test_delete_pbr_rule(self):
        """Test case for delete_pbr_rule

        Delete an Existing Rule  # noqa: E501
        """
        pass

    def test_delete_pbr_section(self):
        """Test case for delete_pbr_section

        Delete an Existing Section and Its Associated Rules  # noqa: E501
        """
        pass

    def test_get_pbr_rule(self):
        """Test case for get_pbr_rule

        Read an Existing Rule  # noqa: E501
        """
        pass

    def test_get_pbr_rule_stats(self):
        """Test case for get_pbr_rule_stats

        Get PBR rule level statistics.  # noqa: E501
        """
        pass

    def test_get_pbr_rules(self):
        """Test case for get_pbr_rules

        Get All the Rules for a Section  # noqa: E501
        """
        pass

    def test_get_pbr_section(self):
        """Test case for get_pbr_section

        Get an Existing Section  # noqa: E501
        """
        pass

    def test_get_pbr_section_stats(self):
        """Test case for get_pbr_section_stats

        Get PBR section level statistics.  # noqa: E501
        """
        pass

    def test_get_pbr_section_with_rules_list_with_rules(self):
        """Test case for get_pbr_section_with_rules_list_with_rules

        Get an Existing Section, Including Rules  # noqa: E501
        """
        pass

    def test_list_pbr_sections(self):
        """Test case for list_pbr_sections

        List All PBR Sections  # noqa: E501
        """
        pass

    def test_revise_pbr_rule_revise(self):
        """Test case for revise_pbr_rule_revise

        Update an Existing Rule and Reorder the Rule  # noqa: E501
        """
        pass

    def test_revise_pbr_section_revise(self):
        """Test case for revise_pbr_section_revise

        Update an Existing Section, including Its Position  # noqa: E501
        """
        pass

    def test_revise_pbr_section_with_rules_revise_with_rules(self):
        """Test case for revise_pbr_section_with_rules_revise_with_rules

        Update an Existing Section with Rules  # noqa: E501
        """
        pass

    def test_update_pbr_rule(self):
        """Test case for update_pbr_rule

        Update an Existing Rule  # noqa: E501
        """
        pass

    def test_update_pbr_section(self):
        """Test case for update_pbr_section

        Update an Existing Section  # noqa: E501
        """
        pass

    def test_update_pbr_section_with_rules_update_with_rules(self):
        """Test case for update_pbr_section_with_rules_update_with_rules

        Update an Existing Section, Including Its Rules  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
