# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.management_plane_api_security_services_firewall_api import ManagementPlaneAPISecurityServicesFirewallApi  # noqa: E501
from swagger_client.rest import ApiException


class TestManagementPlaneAPISecurityServicesFirewallApi(unittest.TestCase):
    """ManagementPlaneAPISecurityServicesFirewallApi unit test stubs"""

    def setUp(self):
        self.api = ManagementPlaneAPISecurityServicesFirewallApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_member_add_member(self):
        """Test case for add_member_add_member

        Add a new object in the exclude list  # noqa: E501
        """
        pass

    def test_add_rule_in_section(self):
        """Test case for add_rule_in_section

        Add a Single Rule in a Section  # noqa: E501
        """
        pass

    def test_add_rules_in_section_create_multiple(self):
        """Test case for add_rules_in_section_create_multiple

        Add Multiple Rules in a Section  # noqa: E501
        """
        pass

    def test_add_section(self):
        """Test case for add_section

        Create a New Empty Section  # noqa: E501
        """
        pass

    def test_add_section_with_rules_create_with_rules(self):
        """Test case for add_section_with_rules_create_with_rules

        Create a Section with Rules  # noqa: E501
        """
        pass

    def test_check_member_if_exists_check_if_exists(self):
        """Test case for check_member_if_exists_check_if_exists

        Check if the object a member of the exclude list  # noqa: E501
        """
        pass

    def test_create_firewall_profile(self):
        """Test case for create_firewall_profile

        Create a firewall profile.  # noqa: E501
        """
        pass

    def test_delete_firewall_profile(self):
        """Test case for delete_firewall_profile

        Delete a firewall profile.  # noqa: E501
        """
        pass

    def test_delete_rule(self):
        """Test case for delete_rule

        Delete an Existing Rule  # noqa: E501
        """
        pass

    def test_delete_section(self):
        """Test case for delete_section

        Delete an Existing Section and Its Associated Rules  # noqa: E501
        """
        pass

    def test_disable_firewall_on_target_resource_disable_firewall(self):
        """Test case for disable_firewall_on_target_resource_disable_firewall

        Disable firewall on target resource in dfw context  # noqa: E501
        """
        pass

    def test_enable_firewall_on_target_resource_enable_firewall(self):
        """Test case for enable_firewall_on_target_resource_enable_firewall

        Enable firewall on target resource in dfw context  # noqa: E501
        """
        pass

    def test_get_exclude_list(self):
        """Test case for get_exclude_list

        Get list of entities in exclude list  # noqa: E501
        """
        pass

    def test_get_firewall_profile(self):
        """Test case for get_firewall_profile

        Get all firewall session timer profiles.  # noqa: E501
        """
        pass

    def test_get_firewall_section_stats(self):
        """Test case for get_firewall_section_stats

        Get Firewall section level statistics section  # noqa: E501
        """
        pass

    def test_get_firewall_stats(self):
        """Test case for get_firewall_stats

        Get Firewall rule level statistics  # noqa: E501
        """
        pass

    def test_get_firewall_status(self):
        """Test case for get_firewall_status

        Get firewall global status for dfw context  # noqa: E501
        """
        pass

    def test_get_firewall_status_on_target_resource(self):
        """Test case for get_firewall_status_on_target_resource

        Get firewall status for target resource in dfw context  # noqa: E501
        """
        pass

    def test_get_rule(self):
        """Test case for get_rule

        Read an Existing Rule  # noqa: E501
        """
        pass

    def test_get_rule_state(self):
        """Test case for get_rule_state

        Get the Realized State of a Firewall Rule  # noqa: E501
        """
        pass

    def test_get_rules(self):
        """Test case for get_rules

        Get All the Rules for a Section  # noqa: E501
        """
        pass

    def test_get_section(self):
        """Test case for get_section

        Get an Existing Section  # noqa: E501
        """
        pass

    def test_get_section_state(self):
        """Test case for get_section_state

        Get the Realized State of a Firewall Section  # noqa: E501
        """
        pass

    def test_get_section_with_rules_list_with_rules(self):
        """Test case for get_section_with_rules_list_with_rules

        Get an Existing Section, Including Rules  # noqa: E501
        """
        pass

    def test_get_sections_summary(self):
        """Test case for get_sections_summary

        Get the summary of sections in the firewall configuration.  # noqa: E501
        """
        pass

    def test_list_firewall_profiles(self):
        """Test case for list_firewall_profiles

        Get firewall profiles available.  # noqa: E501
        """
        pass

    def test_list_firewall_status(self):
        """Test case for list_firewall_status

        List all firewall status for supported contexts  # noqa: E501
        """
        pass

    def test_list_sections(self):
        """Test case for list_sections

        List All Firewall Sections  # noqa: E501
        """
        pass

    def test_lock_section_lock(self):
        """Test case for lock_section_lock

        Lock a section  # noqa: E501
        """
        pass

    def test_read_firewall_rule(self):
        """Test case for read_firewall_rule

        Read an Existing Rule  # noqa: E501
        """
        pass

    def test_remove_member_remove_member(self):
        """Test case for remove_member_remove_member

        Remove an existing object from the exclude list  # noqa: E501
        """
        pass

    def test_reset_firewall_rule_stats_reset(self):
        """Test case for reset_firewall_rule_stats_reset

        Reset firewall rule statistics  # noqa: E501
        """
        pass

    def test_revise_rule_revise(self):
        """Test case for revise_rule_revise

        Update an Existing Rule and Reorder the Rule  # noqa: E501
        """
        pass

    def test_revise_section_revise(self):
        """Test case for revise_section_revise

        Update an Existing Section, Including Its Position  # noqa: E501
        """
        pass

    def test_revise_section_with_rules_revise_with_rules(self):
        """Test case for revise_section_with_rules_revise_with_rules

        Update an Existing Section with Rules  # noqa: E501
        """
        pass

    def test_unlock_section_unlock(self):
        """Test case for unlock_section_unlock

        Unlock a section  # noqa: E501
        """
        pass

    def test_update_exclude_list(self):
        """Test case for update_exclude_list

        Modify exclude list  # noqa: E501
        """
        pass

    def test_update_firewall_profile(self):
        """Test case for update_firewall_profile

        Update a firewall profile.  # noqa: E501
        """
        pass

    def test_update_firewall_status(self):
        """Test case for update_firewall_status

        Update global firewall status for dfw context  # noqa: E501
        """
        pass

    def test_update_rule(self):
        """Test case for update_rule

        Update an Existing Rule  # noqa: E501
        """
        pass

    def test_update_section(self):
        """Test case for update_section

        Update an Existing Section  # noqa: E501
        """
        pass

    def test_update_section_with_rules_update_with_rules(self):
        """Test case for update_section_with_rules_update_with_rules

        Update an Existing Section, Including Its Rules  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
