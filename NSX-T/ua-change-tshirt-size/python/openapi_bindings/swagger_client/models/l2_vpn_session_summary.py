# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class L2VPNSessionSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'total_l2vpn_sessions': 'int',
        'established_l2vpn_sessions': 'int',
        'failed_l2vpn_sessions': 'int'
    }

    attribute_map = {
        'total_l2vpn_sessions': 'total_l2vpn_sessions',
        'established_l2vpn_sessions': 'established_l2vpn_sessions',
        'failed_l2vpn_sessions': 'failed_l2vpn_sessions'
    }

    def __init__(self, total_l2vpn_sessions=None, established_l2vpn_sessions=None, failed_l2vpn_sessions=None):  # noqa: E501
        """L2VPNSessionSummary - a model defined in Swagger"""  # noqa: E501
        self._total_l2vpn_sessions = None
        self._established_l2vpn_sessions = None
        self._failed_l2vpn_sessions = None
        self.discriminator = None
        if total_l2vpn_sessions is not None:
            self.total_l2vpn_sessions = total_l2vpn_sessions
        if established_l2vpn_sessions is not None:
            self.established_l2vpn_sessions = established_l2vpn_sessions
        if failed_l2vpn_sessions is not None:
            self.failed_l2vpn_sessions = failed_l2vpn_sessions

    @property
    def total_l2vpn_sessions(self):
        """Gets the total_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501

        Total L2VPN sessions configured.  # noqa: E501

        :return: The total_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501
        :rtype: int
        """
        return self._total_l2vpn_sessions

    @total_l2vpn_sessions.setter
    def total_l2vpn_sessions(self, total_l2vpn_sessions):
        """Sets the total_l2vpn_sessions of this L2VPNSessionSummary.

        Total L2VPN sessions configured.  # noqa: E501

        :param total_l2vpn_sessions: The total_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501
        :type: int
        """

        self._total_l2vpn_sessions = total_l2vpn_sessions

    @property
    def established_l2vpn_sessions(self):
        """Gets the established_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501

        Number of established L2VPN sessions. L2VPN session is established when all the tunnels are up.  # noqa: E501

        :return: The established_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501
        :rtype: int
        """
        return self._established_l2vpn_sessions

    @established_l2vpn_sessions.setter
    def established_l2vpn_sessions(self, established_l2vpn_sessions):
        """Sets the established_l2vpn_sessions of this L2VPNSessionSummary.

        Number of established L2VPN sessions. L2VPN session is established when all the tunnels are up.  # noqa: E501

        :param established_l2vpn_sessions: The established_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501
        :type: int
        """

        self._established_l2vpn_sessions = established_l2vpn_sessions

    @property
    def failed_l2vpn_sessions(self):
        """Gets the failed_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501

        Number of failed L2VPN sessions. L2VPN session is failed when all the tunnels are down.  # noqa: E501

        :return: The failed_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501
        :rtype: int
        """
        return self._failed_l2vpn_sessions

    @failed_l2vpn_sessions.setter
    def failed_l2vpn_sessions(self, failed_l2vpn_sessions):
        """Sets the failed_l2vpn_sessions of this L2VPNSessionSummary.

        Number of failed L2VPN sessions. L2VPN session is failed when all the tunnels are down.  # noqa: E501

        :param failed_l2vpn_sessions: The failed_l2vpn_sessions of this L2VPNSessionSummary.  # noqa: E501
        :type: int
        """

        self._failed_l2vpn_sessions = failed_l2vpn_sessions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(L2VPNSessionSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, L2VPNSessionSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
