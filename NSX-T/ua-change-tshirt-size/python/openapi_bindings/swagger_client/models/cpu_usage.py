# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CpuUsage(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'avg_cpu_core_usage_dpdk': 'float',
        'highest_cpu_core_usage_non_dpdk': 'float',
        'avg_cpu_core_usage_non_dpdk': 'float',
        'highest_cpu_core_usage_dpdk': 'float'
    }

    attribute_map = {
        'avg_cpu_core_usage_dpdk': 'avg_cpu_core_usage_dpdk',
        'highest_cpu_core_usage_non_dpdk': 'highest_cpu_core_usage_non_dpdk',
        'avg_cpu_core_usage_non_dpdk': 'avg_cpu_core_usage_non_dpdk',
        'highest_cpu_core_usage_dpdk': 'highest_cpu_core_usage_dpdk'
    }

    def __init__(self, avg_cpu_core_usage_dpdk=None, highest_cpu_core_usage_non_dpdk=None, avg_cpu_core_usage_non_dpdk=None, highest_cpu_core_usage_dpdk=None):  # noqa: E501
        """CpuUsage - a model defined in Swagger"""  # noqa: E501
        self._avg_cpu_core_usage_dpdk = None
        self._highest_cpu_core_usage_non_dpdk = None
        self._avg_cpu_core_usage_non_dpdk = None
        self._highest_cpu_core_usage_dpdk = None
        self.discriminator = None
        if avg_cpu_core_usage_dpdk is not None:
            self.avg_cpu_core_usage_dpdk = avg_cpu_core_usage_dpdk
        if highest_cpu_core_usage_non_dpdk is not None:
            self.highest_cpu_core_usage_non_dpdk = highest_cpu_core_usage_non_dpdk
        if avg_cpu_core_usage_non_dpdk is not None:
            self.avg_cpu_core_usage_non_dpdk = avg_cpu_core_usage_non_dpdk
        if highest_cpu_core_usage_dpdk is not None:
            self.highest_cpu_core_usage_dpdk = highest_cpu_core_usage_dpdk

    @property
    def avg_cpu_core_usage_dpdk(self):
        """Gets the avg_cpu_core_usage_dpdk of this CpuUsage.  # noqa: E501

        Indicates the average usage of all DPDK cores in percentage.  # noqa: E501

        :return: The avg_cpu_core_usage_dpdk of this CpuUsage.  # noqa: E501
        :rtype: float
        """
        return self._avg_cpu_core_usage_dpdk

    @avg_cpu_core_usage_dpdk.setter
    def avg_cpu_core_usage_dpdk(self, avg_cpu_core_usage_dpdk):
        """Sets the avg_cpu_core_usage_dpdk of this CpuUsage.

        Indicates the average usage of all DPDK cores in percentage.  # noqa: E501

        :param avg_cpu_core_usage_dpdk: The avg_cpu_core_usage_dpdk of this CpuUsage.  # noqa: E501
        :type: float
        """

        self._avg_cpu_core_usage_dpdk = avg_cpu_core_usage_dpdk

    @property
    def highest_cpu_core_usage_non_dpdk(self):
        """Gets the highest_cpu_core_usage_non_dpdk of this CpuUsage.  # noqa: E501

        Indicates the highest cpu utilization value among non_dpdk cores in percentage.  # noqa: E501

        :return: The highest_cpu_core_usage_non_dpdk of this CpuUsage.  # noqa: E501
        :rtype: float
        """
        return self._highest_cpu_core_usage_non_dpdk

    @highest_cpu_core_usage_non_dpdk.setter
    def highest_cpu_core_usage_non_dpdk(self, highest_cpu_core_usage_non_dpdk):
        """Sets the highest_cpu_core_usage_non_dpdk of this CpuUsage.

        Indicates the highest cpu utilization value among non_dpdk cores in percentage.  # noqa: E501

        :param highest_cpu_core_usage_non_dpdk: The highest_cpu_core_usage_non_dpdk of this CpuUsage.  # noqa: E501
        :type: float
        """

        self._highest_cpu_core_usage_non_dpdk = highest_cpu_core_usage_non_dpdk

    @property
    def avg_cpu_core_usage_non_dpdk(self):
        """Gets the avg_cpu_core_usage_non_dpdk of this CpuUsage.  # noqa: E501

        Indicates the average usage of all non-DPDK cores in percentage.  # noqa: E501

        :return: The avg_cpu_core_usage_non_dpdk of this CpuUsage.  # noqa: E501
        :rtype: float
        """
        return self._avg_cpu_core_usage_non_dpdk

    @avg_cpu_core_usage_non_dpdk.setter
    def avg_cpu_core_usage_non_dpdk(self, avg_cpu_core_usage_non_dpdk):
        """Sets the avg_cpu_core_usage_non_dpdk of this CpuUsage.

        Indicates the average usage of all non-DPDK cores in percentage.  # noqa: E501

        :param avg_cpu_core_usage_non_dpdk: The avg_cpu_core_usage_non_dpdk of this CpuUsage.  # noqa: E501
        :type: float
        """

        self._avg_cpu_core_usage_non_dpdk = avg_cpu_core_usage_non_dpdk

    @property
    def highest_cpu_core_usage_dpdk(self):
        """Gets the highest_cpu_core_usage_dpdk of this CpuUsage.  # noqa: E501

        Indicates the highest CPU utilization value among DPDK cores in percentage.  # noqa: E501

        :return: The highest_cpu_core_usage_dpdk of this CpuUsage.  # noqa: E501
        :rtype: float
        """
        return self._highest_cpu_core_usage_dpdk

    @highest_cpu_core_usage_dpdk.setter
    def highest_cpu_core_usage_dpdk(self, highest_cpu_core_usage_dpdk):
        """Sets the highest_cpu_core_usage_dpdk of this CpuUsage.

        Indicates the highest CPU utilization value among DPDK cores in percentage.  # noqa: E501

        :param highest_cpu_core_usage_dpdk: The highest_cpu_core_usage_dpdk of this CpuUsage.  # noqa: E501
        :type: float
        """

        self._highest_cpu_core_usage_dpdk = highest_cpu_core_usage_dpdk

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CpuUsage, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CpuUsage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
