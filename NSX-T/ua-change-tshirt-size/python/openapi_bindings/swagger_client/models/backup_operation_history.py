# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class BackupOperationHistory(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'inventory_backup_statuses': 'list[BackupOperationStatus]',
        'cluster_backup_statuses': 'list[BackupOperationStatus]',
        'node_backup_statuses': 'list[BackupOperationStatus]'
    }

    attribute_map = {
        'inventory_backup_statuses': 'inventory_backup_statuses',
        'cluster_backup_statuses': 'cluster_backup_statuses',
        'node_backup_statuses': 'node_backup_statuses'
    }

    def __init__(self, inventory_backup_statuses=None, cluster_backup_statuses=None, node_backup_statuses=None):  # noqa: E501
        """BackupOperationHistory - a model defined in Swagger"""  # noqa: E501
        self._inventory_backup_statuses = None
        self._cluster_backup_statuses = None
        self._node_backup_statuses = None
        self.discriminator = None
        if inventory_backup_statuses is not None:
            self.inventory_backup_statuses = inventory_backup_statuses
        if cluster_backup_statuses is not None:
            self.cluster_backup_statuses = cluster_backup_statuses
        if node_backup_statuses is not None:
            self.node_backup_statuses = node_backup_statuses

    @property
    def inventory_backup_statuses(self):
        """Gets the inventory_backup_statuses of this BackupOperationHistory.  # noqa: E501

        Statuses of previous inventory backups  # noqa: E501

        :return: The inventory_backup_statuses of this BackupOperationHistory.  # noqa: E501
        :rtype: list[BackupOperationStatus]
        """
        return self._inventory_backup_statuses

    @inventory_backup_statuses.setter
    def inventory_backup_statuses(self, inventory_backup_statuses):
        """Sets the inventory_backup_statuses of this BackupOperationHistory.

        Statuses of previous inventory backups  # noqa: E501

        :param inventory_backup_statuses: The inventory_backup_statuses of this BackupOperationHistory.  # noqa: E501
        :type: list[BackupOperationStatus]
        """

        self._inventory_backup_statuses = inventory_backup_statuses

    @property
    def cluster_backup_statuses(self):
        """Gets the cluster_backup_statuses of this BackupOperationHistory.  # noqa: E501

        Statuses of previous cluser backups  # noqa: E501

        :return: The cluster_backup_statuses of this BackupOperationHistory.  # noqa: E501
        :rtype: list[BackupOperationStatus]
        """
        return self._cluster_backup_statuses

    @cluster_backup_statuses.setter
    def cluster_backup_statuses(self, cluster_backup_statuses):
        """Sets the cluster_backup_statuses of this BackupOperationHistory.

        Statuses of previous cluser backups  # noqa: E501

        :param cluster_backup_statuses: The cluster_backup_statuses of this BackupOperationHistory.  # noqa: E501
        :type: list[BackupOperationStatus]
        """

        self._cluster_backup_statuses = cluster_backup_statuses

    @property
    def node_backup_statuses(self):
        """Gets the node_backup_statuses of this BackupOperationHistory.  # noqa: E501

        Statuses of previous node backups  # noqa: E501

        :return: The node_backup_statuses of this BackupOperationHistory.  # noqa: E501
        :rtype: list[BackupOperationStatus]
        """
        return self._node_backup_statuses

    @node_backup_statuses.setter
    def node_backup_statuses(self, node_backup_statuses):
        """Sets the node_backup_statuses of this BackupOperationHistory.

        Statuses of previous node backups  # noqa: E501

        :param node_backup_statuses: The node_backup_statuses of this BackupOperationHistory.  # noqa: E501
        :type: list[BackupOperationStatus]
        """

        self._node_backup_statuses = node_backup_statuses

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BackupOperationHistory, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BackupOperationHistory):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
