# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EdgeTransportNodeMemoryUsage(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cache_usage': 'float',
        'swap_usage': 'float',
        'system_mem_usage': 'float',
        'datapath_total_usage': 'float',
        'datapath_mem_usage_details': 'EdgeTransportNodeDatapathMemoryUsage'
    }

    attribute_map = {
        'cache_usage': 'cache_usage',
        'swap_usage': 'swap_usage',
        'system_mem_usage': 'system_mem_usage',
        'datapath_total_usage': 'datapath_total_usage',
        'datapath_mem_usage_details': 'datapath_mem_usage_details'
    }

    def __init__(self, cache_usage=None, swap_usage=None, system_mem_usage=None, datapath_total_usage=None, datapath_mem_usage_details=None):  # noqa: E501
        """EdgeTransportNodeMemoryUsage - a model defined in Swagger"""  # noqa: E501
        self._cache_usage = None
        self._swap_usage = None
        self._system_mem_usage = None
        self._datapath_total_usage = None
        self._datapath_mem_usage_details = None
        self.discriminator = None
        if cache_usage is not None:
            self.cache_usage = cache_usage
        if swap_usage is not None:
            self.swap_usage = swap_usage
        if system_mem_usage is not None:
            self.system_mem_usage = system_mem_usage
        if datapath_total_usage is not None:
            self.datapath_total_usage = datapath_total_usage
        if datapath_mem_usage_details is not None:
            self.datapath_mem_usage_details = datapath_mem_usage_details

    @property
    def cache_usage(self):
        """Gets the cache_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501

        Percentage of RAM on the system that can be flushed out to disk.  # noqa: E501

        :return: The cache_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :rtype: float
        """
        return self._cache_usage

    @cache_usage.setter
    def cache_usage(self, cache_usage):
        """Sets the cache_usage of this EdgeTransportNodeMemoryUsage.

        Percentage of RAM on the system that can be flushed out to disk.  # noqa: E501

        :param cache_usage: The cache_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :type: float
        """

        self._cache_usage = cache_usage

    @property
    def swap_usage(self):
        """Gets the swap_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501

        Percentage of swap disk in use.  # noqa: E501

        :return: The swap_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :rtype: float
        """
        return self._swap_usage

    @swap_usage.setter
    def swap_usage(self, swap_usage):
        """Sets the swap_usage of this EdgeTransportNodeMemoryUsage.

        Percentage of swap disk in use.  # noqa: E501

        :param swap_usage: The swap_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :type: float
        """

        self._swap_usage = swap_usage

    @property
    def system_mem_usage(self):
        """Gets the system_mem_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501

        Percentage of RAM in use on edge node.  # noqa: E501

        :return: The system_mem_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :rtype: float
        """
        return self._system_mem_usage

    @system_mem_usage.setter
    def system_mem_usage(self, system_mem_usage):
        """Sets the system_mem_usage of this EdgeTransportNodeMemoryUsage.

        Percentage of RAM in use on edge node.  # noqa: E501

        :param system_mem_usage: The system_mem_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :type: float
        """

        self._system_mem_usage = system_mem_usage

    @property
    def datapath_total_usage(self):
        """Gets the datapath_total_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501

        Percentage of memory in use by datapath processes which includes RES and hugepage memory.  # noqa: E501

        :return: The datapath_total_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :rtype: float
        """
        return self._datapath_total_usage

    @datapath_total_usage.setter
    def datapath_total_usage(self, datapath_total_usage):
        """Sets the datapath_total_usage of this EdgeTransportNodeMemoryUsage.

        Percentage of memory in use by datapath processes which includes RES and hugepage memory.  # noqa: E501

        :param datapath_total_usage: The datapath_total_usage of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :type: float
        """

        self._datapath_total_usage = datapath_total_usage

    @property
    def datapath_mem_usage_details(self):
        """Gets the datapath_mem_usage_details of this EdgeTransportNodeMemoryUsage.  # noqa: E501


        :return: The datapath_mem_usage_details of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :rtype: EdgeTransportNodeDatapathMemoryUsage
        """
        return self._datapath_mem_usage_details

    @datapath_mem_usage_details.setter
    def datapath_mem_usage_details(self, datapath_mem_usage_details):
        """Sets the datapath_mem_usage_details of this EdgeTransportNodeMemoryUsage.


        :param datapath_mem_usage_details: The datapath_mem_usage_details of this EdgeTransportNodeMemoryUsage.  # noqa: E501
        :type: EdgeTransportNodeDatapathMemoryUsage
        """

        self._datapath_mem_usage_details = datapath_mem_usage_details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EdgeTransportNodeMemoryUsage, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EdgeTransportNodeMemoryUsage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
