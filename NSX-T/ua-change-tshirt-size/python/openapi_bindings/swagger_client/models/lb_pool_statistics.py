# coding: utf-8

"""
    NSX-T Manager API

    VMware NSX-T Manager REST API  # noqa: E501

    OpenAPI spec version: 3.1.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class LbPoolStatistics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'last_update_timestamp': 'int',
        'statistics': 'LbStatisticsCounter',
        'pool_id': 'str',
        'members': 'list[LbPoolMemberStatistics]'
    }

    attribute_map = {
        'last_update_timestamp': 'last_update_timestamp',
        'statistics': 'statistics',
        'pool_id': 'pool_id',
        'members': 'members'
    }

    def __init__(self, last_update_timestamp=None, statistics=None, pool_id=None, members=None):  # noqa: E501
        """LbPoolStatistics - a model defined in Swagger"""  # noqa: E501
        self._last_update_timestamp = None
        self._statistics = None
        self._pool_id = None
        self._members = None
        self.discriminator = None
        if last_update_timestamp is not None:
            self.last_update_timestamp = last_update_timestamp
        self.statistics = statistics
        self.pool_id = pool_id
        if members is not None:
            self.members = members

    @property
    def last_update_timestamp(self):
        """Gets the last_update_timestamp of this LbPoolStatistics.  # noqa: E501

        Timestamp when the data was last updated  # noqa: E501

        :return: The last_update_timestamp of this LbPoolStatistics.  # noqa: E501
        :rtype: int
        """
        return self._last_update_timestamp

    @last_update_timestamp.setter
    def last_update_timestamp(self, last_update_timestamp):
        """Sets the last_update_timestamp of this LbPoolStatistics.

        Timestamp when the data was last updated  # noqa: E501

        :param last_update_timestamp: The last_update_timestamp of this LbPoolStatistics.  # noqa: E501
        :type: int
        """

        self._last_update_timestamp = last_update_timestamp

    @property
    def statistics(self):
        """Gets the statistics of this LbPoolStatistics.  # noqa: E501


        :return: The statistics of this LbPoolStatistics.  # noqa: E501
        :rtype: LbStatisticsCounter
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this LbPoolStatistics.


        :param statistics: The statistics of this LbPoolStatistics.  # noqa: E501
        :type: LbStatisticsCounter
        """
        if statistics is None:
            raise ValueError("Invalid value for `statistics`, must not be `None`")  # noqa: E501

        self._statistics = statistics

    @property
    def pool_id(self):
        """Gets the pool_id of this LbPoolStatistics.  # noqa: E501

        Load balancer pool identifier  # noqa: E501

        :return: The pool_id of this LbPoolStatistics.  # noqa: E501
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this LbPoolStatistics.

        Load balancer pool identifier  # noqa: E501

        :param pool_id: The pool_id of this LbPoolStatistics.  # noqa: E501
        :type: str
        """
        if pool_id is None:
            raise ValueError("Invalid value for `pool_id`, must not be `None`")  # noqa: E501

        self._pool_id = pool_id

    @property
    def members(self):
        """Gets the members of this LbPoolStatistics.  # noqa: E501

        Statistics of load balancer pool members  # noqa: E501

        :return: The members of this LbPoolStatistics.  # noqa: E501
        :rtype: list[LbPoolMemberStatistics]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this LbPoolStatistics.

        Statistics of load balancer pool members  # noqa: E501

        :param members: The members of this LbPoolStatistics.  # noqa: E501
        :type: list[LbPoolMemberStatistics]
        """

        self._members = members

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LbPoolStatistics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LbPoolStatistics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
